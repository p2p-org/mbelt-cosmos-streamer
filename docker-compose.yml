version: '3'
services:
  cosmos-streamer:
    build:
      context: .
      dockerfile: Dockerfile.streamer
    restart: always
    container_name: cosmos-streamer
    environment:
      LOG_LEVEL: ${LOG_LEVEL}
      CHAIN_ID: ${CHAIN_ID}
      NODE_HOST: ${NODE_HOST}
      NODE_WS_PORT: ${NODE_WS_PORT}
      NODE_LCD_PORT: ${NODE_LCD_PORT}
      KAFKA_HOST: ${KAFKA_HOST}
      PG_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable

  cosmos-watcher:
    build:
      context: .
      dockerfile: Dockerfile.watcher
    restart: always
    container_name: cosmos-watcher
    environment:
      LOG_LEVEL: ${LOG_LEVEL}
      CHAIN_ID: ${CHAIN_ID}
      WATCHER_START_HEIGHT: ${WATCHER_START_HEIGHT}
      WATCHER_WORKER: ${WATCHER_WORKER}
      NODE_HOST: ${NODE_HOST}
      NODE_WS_PORT: ${NODE_WS_PORT}
      NODE_LCD_PORT: ${NODE_LCD_PORT}
      KAFKA_HOST: ${KAFKA_HOST}
      PG_URL:  postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable

  cosmos-consistency:
    build:
      context: .
      dockerfile: Dockerfile.consistency
    restart: always
    container_name: cosmos-consistency
    environment:
      LOG_LEVEL: ${LOG_LEVEL}
      NODE_HOST: ${NODE_HOST}
      KAFKA_HOST: ${KAFKA_HOST}
      PG_URL:  postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable