version: '3'
services:
    cosmos-streamer:
      build:
        context: .
        dockerfile: Dockerfile.streamer
      restart: always
      container_name: cosmos-streamer
      environment:
        KAFKA_PREFIX: ${APP_ID}_${APP_MODE}_${APP_NETWORK}
        LOG_LEVEL: ${LOG_LEVEL}
        CHAIN_ID: ${CHAIN_ID}
        NODE_HOST: ${NODE_HOST}
        NODE_WS_PORT: ${NODE_WS_PORT}
        NODE_LCD_PORT: ${NODE_LCD_PORT}
        KAFKA_HOST: ${KAFKA_HOST}:9092
        PG_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}?sslmode=disable

    cosmos-watcher:
      build:
        context: .
        dockerfile: Dockerfile.watcher
      restart: always
      container_name: cosmos-watcher
      environment:
        KAFKA_PREFIX: ${APP_ID}_${APP_MODE}_${APP_NETWORK}
        LOG_LEVEL: ${LOG_LEVEL}
        CHAIN_ID: ${CHAIN_ID}
        WATCHER_START_HEIGHT: ${WATCHER_START_HEIGHT}
        WATCHER_WORKER: ${WATCHER_WORKER}
        NODE_HOST: ${NODE_HOST}
        NODE_WS_PORT: ${NODE_WS_PORT}
        NODE_LCD_PORT: ${NODE_LCD_PORT}
        KAFKA_HOST: ${KAFKA_HOST}:9092
        PG_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}?sslmode=disable

    cosmos-consistency:
      build:
        context: .
        dockerfile: Dockerfile.consistency
      restart: always
      container_name: cosmos-consistency
      environment:
        LOG_LEVEL: ${LOG_LEVEL}
        KAFKA_PREFIX: ${APP_ID}_${APP_MODE}_${APP_NETWORK}
        NODE_HOST: ${NODE_HOST}
        KAFKA_HOST: ${KAFKA_HOST}:9092
        PG_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}?sslmode=disable
